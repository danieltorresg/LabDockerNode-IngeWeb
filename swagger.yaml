swagger: "2.0"
info:
  title: Ing web nodejs-docker lab
  description: API rest using nodejs, mongo, express and swagger
  version: 1.0.0
schemes:
  - http
produces:
  - application/json
paths:
  "/users":
    get:
      description: Get all users
      tags:
        - Users
      summary: Get all the users
      responses:
        200:
          description: Users found
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
      schema:
        default:
          description: "Successful operation"
    post:
      description: Create a new user
      tags:
        - Users
      summary: Create a new user
      parameters:
        - name: user
          description: User object
          in: body
          requited: true
          type: object
          schema:
            $ref: "#/definitions/NewUser"
      responses:
        201:
          description: User created
          schema:
            type: object
            $ref: "#/definitions/User"

  "/users/{userId}":
    parameters:
      - name: userId
        in: path
        required: true
        description: Find user by specific ID
        type: string
    get:
      description: Use to get a specific user
      tags:
        - Users
      summary: Get user by ID
      responses:
        200:
          description: User found
          schema:
            type: object
            $ref: "#/definitions/User"
    put:
      description: Update a specific user
      tags:
        - Users
      summary: Update user by ID
      parameters:
        - name: user
          description: User object
          in: body
          requited: true
          type: object
          schema:
            $ref: "#/definitions/UpdateUser"
      responses:
        201:
          description: User updated
          schema:
            type: object
            $ref: "#/definitions/User"

    delete:
      description: Delete a specific user
      tags:
        - Users
      summary: Delete user by ID
      responses:
        200:
          description: User deleted
          schema:
            type: object
            $ref: "#/definitions/User"
      

definitions:
  NewUser:
    type: "object"
    required:
      - firstName
      - lastName
      - email
      - phoneNumber
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      phoneNumber:
        type: "integer"
        format: "int64"
      address:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      zipCode:
        type: "string"
      country:
        type: "string"

  User:
    type: "object"
    required:
      - firstName
      - lastName
      - email
      - phoneNumber
    properties:
      _id:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      phoneNumber:
        type: "integer"
        format: "int64"
      address:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      zipCode:
        type: "string"
      country:
        type: "string"
      __v:
        type: "integer"
        format: "int64"

  UpdateUser:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      phoneNumber:
        type: "integer"
        format: "int64"
      address:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      zipCode:
        type: "string"
      country:
        type: "string"
